[General]
network = BangaloreScenario  # Matches the network name in BangaloreScenario.ned

# Simulation parameters
sim-time-limit = 300s  # Or your desired simulation time
repeat = 5  # Repeat each configuration 5 times for statistical reliability

# Configure the TraCI Scenario Manager
*.manager.updateInterval = 0.1s  # How often OMNeT++ syncs with SUMO
*.manager.host = "localhost"  # SUMO must be running on the same machine
*.manager.port = 9999  # Default sumo-launchd.py port
*.manager.moduleType = "org.car2x.veins.nodes.Car"  # Type of vehicle module Veins should create
*.manager.moduleName = "node"  # Prefix for vehicle module names (e.g., node[0], node[1])
*.manager.autoShutdown = true  # Shut down SUMO when simulation ends
*.manager.launchConfig = xmldoc("bangalore.launchd.xml") # <-- Point to the new file

# Ensure scalar and vector recording are enabled for built-in statistics
*.**.scalar-recording = true
*.**.vector-recording = true

# Configure Playground size (will be overridden by TraCI based on map, but needed initially)
*.**.BangaloreScenario.worldUtility.playgroundSizeX = 3000m
*.**.BangaloreScenario.worldUtility.playgroundSizeY = 3000m
*.**.BangaloreScenario.worldUtility.playgroundSizeZ = 50m # Keep Z as is unless you have tall structures

*.**.BangaloreScenario.playgroundSizeX = 3000m
*.**.BangaloreScenario.playgroundSizeY = 3000m
*.**.BangaloreScenario.playgroundSizeZ = 50m

# Configure Vehicle Mobility to use TraCI
*.node[*].veinsmobility.setHostState = false
*.node[*].veinsmobility.setHostSpeed = false

*.node[*].mobilityType = "org.car2x.veins.modules.mobility.traci.TraCIMobility"
*.node[*].mobility.updateInterval = 0.1s
*.node[*].mobility.setHostState = false

# Configure Vehicle Application Layer
# Change to match the correct NED package structure
*.node[*].applType = "bangalore_v2v.MyBangaloreApp.MyBangaloreApp"  # <-- Updated path

# Configure Lower Layers (Example using default Veins 802.11p settings)
*.node[*].nicType = "org.car2x.veins.modules.nic.Nic80211p"
*.node[*].nic.phy80211p.usePropagationDelay = true
*.node[*].nic.phy80211p.thermalNoise = -110dBm
*.node[*].nic.phy80211p.sensitivity = -95dBm # Example: Setting sensitivity here
*.node[*].nic.phy80211p.maxTXPower = 20mW # Example: Setting maxTXPower here
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 0
# Configure parameters for your custom application module (MyBangaloreApp)
*.node[*].appl.broadcastInterval = 1s
*.node[*].appl.periodicLoggingInterval = 0.1s
*.node[*].appl.safetyDistanceThreshold = 10m

*.**.nic.mac1609_4.useServiceChannel = false

*.**.nic.mac1609_4.txPower = 20mW
*.**.nic.phy80211p.minPowerLevel = -110dBm

*.**.nic.phy80211p.useNoiseFloor = true
*.**.nic.phy80211p.noiseFloor = -98dBm

# Placeholder, will be overridden by TraCI
BangaloreScenario.numCars = 0

# Fix analogueModels and decider (use xmlns="xmldoc("config.xml")")
*.**.nic.phy80211p.decider = xmldoc("config.xml")
*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")        # <-- ADD #/root/Decider

# Fix noiseFloor and minPowerLevel
# Connection Manager parameters
*.connectionManager.sendDirect = false
*.connectionManager.maxInterfDist = 10000m
# Physical layer parameters for all NICs

# --- Base Network Configuration (can be overridden in specific configs) ---
# Assuming a channel named 'serverChannel' connects vehicle application to server
# You may need to adjust 'serverChannel' based on your actual network topology
**.serverChannel.delay = 5ms # Default low latency
**.serverChannel.datarate = 100Mbps # Default high bandwidth


# --- Specific Latency and Bandwidth Configurations for Day 3 Experiments ---

[Config LowLat_HighBW]
description = "Low Latency (5ms), High Bandwidth (100Mbps)"
**.serverChannel.delay = 5ms
**.serverChannel.datarate = 100Mbps

[Config LowLat_MediumBW]
description = "Low Latency (5ms), Medium Bandwidth (10Mbps)"
**.serverChannel.delay = 5ms
**.serverChannel.datarate = 10Mbps

[Config LowLat_LowBW]
description = "Low Latency (5ms), Low Bandwidth (1Mbps)"
**.serverChannel.delay = 5ms
**.serverChannel.datarate = 1Mbps

[Config MediumLat_HighBW]
description = "Medium Latency (50ms), High Bandwidth (100Mbps)"
**.serverChannel.delay = 50ms
**.serverChannel.datarate = 100Mbps

[Config MediumLat_MediumBW]
description = "Medium Latency (50ms), Medium Bandwidth (10Mbps)"
**.serverChannel.delay = 50ms
**.serverChannel.datarate = 10Mbps

[Config MediumLat_LowBW]
description = "Medium Latency (50ms), Low Bandwidth (1Mbps)"
**.serverChannel.delay = 50ms
**.serverChannel.datarate = 1Mbps

[Config HighLat_HighBW]
description = "High Latency (200ms), High Bandwidth (100Mbps)"
**.serverChannel.delay = 200ms
**.serverChannel.datarate = 100Mbps

[Config HighLat_MediumBW]
description = "High Latency (200ms), Medium Bandwidth (10Mbps)"
**.serverChannel.delay = 200ms
**.serverChannel.datarate = 10Mbps

[Config HighLat_LowBW]
description = "High Latency (200ms), Low Bandwidth (1Mbps)"
**.serverChannel.delay = 200ms
**.serverChannel.datarate = 1Mbps

